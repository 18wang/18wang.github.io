{"meta":{"title":"18wang","subtitle":"","description":"","author":"Wang Xy","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"SVG","slug":"SVG","date":"2020-03-27T05:04:30.462Z","updated":"2020-03-27T04:32:31.814Z","comments":true,"path":"2020/03/27/SVG/","link":"","permalink":"http://yoursite.com/2020/03/27/SVG/","excerpt":"","text":"SVG 学习主要教程网站mozilla developer 主要记录我的一些草稿和学习内容. 入门SVG是一种XML语言的，和XHTML很像，它可以用来绘制矢量图形，例如右面展示的图形。SVG可以通过定义必要的线和形状来创建一个图形，也可以修改已有的位图，或者将这两种方式结合起来创建图形。图形和其组成部分可以形变（be transformed）、合成、或者通过滤镜完全改变外观。 所有的现代浏览器都支持SVG, 但是各种SVG浏览器是有差异的, 可能会出现显示方面的问题. 最接近的“完整版”SVG版本是1.1版, SVG 2.0正在制定当中. 一个简单的例子下面是一段xml代码, 文件名是 **.svg , 但也可以使用 **.xml , 在浏览器中打开都会显示svg图片.在服务器支持gzip时, 也可以用 **.svgz 命名并压缩大型SVG文件 123456789101112&lt;svg version=\"2\" baseProfile=\"full\" width=\"300\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\"&gt; &lt;rect width=\"100%\" height=\"100%\" fill=\"red\" /&gt; &lt;circle cx=\"150\" cy=\"100\" r=\"80\" fill=\"green\" /&gt; &lt;text x=\"150\" y=\"125\" font-size=\"60\" text-anchor=\"middle\" fill=\"white\"&gt;汉字&lt;/text&gt;&lt;/svg&gt; 服务器配置错误是svg文件出错的常见原因, 容易出现文本和乱码, 一定要努力保证在该环节没有问题. 坐标定位SVG采用常见的Canvas坐标定位, 从高到低从左到右, 单位距离为1px 定义一个100*100的矩形 1234567&lt;svg version=\"2\" baseProfile=\"full\" xmlns=\"http://www.w3.org/2000/svg\"&gt; &lt;rect x=\"0\" y=\"0\" width=\"100\" height=\"100\" /&gt;&lt;/svg&gt; 就会出现一个大黑块 像素大小通常 1px 便是用户屏幕的1个像素, 和CSS一样, SVG也能定义相对大小和绝对大小.在SVG根元素中, 可以如下定义 1&lt;svg width=\"50\" height=\"50\" viewBox=\"0 0 100 100\" &gt; 定义画布尺寸为50*50px, 显示的坐标范围100*100px, 实现了缩小一半的效果. 和Qt类似, 用户设备和单位像素的映射关系叫用户坐标系统, 缩放、旋转、倾斜、翻转等功能均可实现. 基本形状下面是一些常见的基本形状, 我们可以直接运用他们或者用他们构建出更复杂的形状. 分别是 矩形, 圆角矩形, 圆, 椭圆, 直线, 折线, 多边形, 曲线 矩形 圆角矩形12&lt;rect x=\"10\" y=\"10\" width=\"30\" height=\"30\" stroke=\"black\" fill=\"transparent\" stroke-width=\"5\"/&gt;&lt;rect x=\"60\" y=\"10\" rx=\"10\" ry=\"10\" width=\"30\" height=\"30\" stroke=\"black\" fill=\"transparent\" stroke-width=\"5\"/&gt; 参数: 左上角的x,y坐标 长度 宽度 rx ry圆角半径 圆 椭圆12&lt;circle cx=\"25\" cy=\"75\" r=\"20\" stroke=\"red\" fill=\"transparent\" stroke-width=\"5\"/&gt;&lt;ellipse cx=\"75\" cy=\"75\" rx=\"20\" ry=\"5\" stroke=\"red\" fill=\"transparent\" stroke-width=\"5\"/&gt; 参数: cx cy中心坐标 r半径 rx ry长短半轴椭圆的参数还挺难受的, 不过中心点也还行 线 折线 多边形12345&lt;line x1=\"10\" x2=\"50\" y1=\"110\" y2=\"150\" stroke=\"orange\" fill=\"transparent\" stroke-width=\"5\"/&gt;&lt;polyline points=\"60 110 65 120 70 115 75 130 80 125 85 140 90 135 95 150 100 145\" stroke=\"orange\" fill=\"transparent\" stroke-width=\"5\"/&gt;&lt;polygon points=\"50 160 55 180 70 180 60 190 65 205 50 195 35 205 40 190 30 180 45 180\" stroke=\"green\" fill=\"transparent\" stroke-width=\"5\"/&gt; 参数: x y起点终点坐标 points点集 xi yi 多边形和折线不同的是, 多边形最终回到原点, 折线落在最后一点. 点集中每个数字用空白符、逗号、终止命令或者换行符分隔开, 每个点必须包含2个数字 曲线1&lt;path d=\"M20,230 Q40,205 50,230 T90,230\" fill=\"none\" stroke=\"blue\" stroke-width=\"5\"/&gt; 参数: d一个点集数列曲线几乎是万能的, 也是最常见的, 可以用来绘制一切线条.","categories":[],"tags":[]},{"title":"test1","slug":"test1","date":"2020-03-22T03:43:21.958Z","updated":"2020-03-22T03:43:27.606Z","comments":true,"path":"2020/03/22/test1/","link":"","permalink":"http://yoursite.com/2020/03/22/test1/","excerpt":"","text":"dfdfdfdf","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-03-22T03:06:34.642Z","updated":"2020-03-19T13:40:05.717Z","comments":true,"path":"2020/03/22/hello-world/","link":"","permalink":"http://yoursite.com/2020/03/22/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}